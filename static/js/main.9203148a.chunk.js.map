{"version":3,"sources":["Components/SideDrawer.js","Components/Header.js","Components/MainContent.js","Containers/EmptyPage.js","Components/DetailsPanel.js","Components/DataTable.js","Components/SurfaceTable.js","Components/ServerTable.js","Components/DataTabs.js","AppContext/AppContext.js","Containers/DataPage.js","App.js","reportWebVitals.js","Containers/GlobalStateManager.js","index.js"],"names":["useStyles","makeStyles","theme","drawer","width","flexShrink","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","drawerPaper","ListItem","textAlign","color","margin","borderRadius","backgroundColor","selected","SideDrawer","props","open","componentHandler","selectedComponent","classes","Drawer","className","variant","anchor","paper","IconButton","onClick","closeDrawerHandler","Divider","List","name","id","map","item","index","button","root","event","ListItemText","primary","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","appBarShift","marginLeft","easeOut","enteringScreen","hide","Header","shiftHeader","AppBar","style","position","clsx","Toolbar","edge","aria-label","openDrawerHandler","content","flexGrow","contentShift","MainContent","children","EmptyPage","Paper","height","Typography","gutterBottom","minHeight","DetailsPanel","paddingBottom","component","parameter","label","fontSize","marginTop","maeginBottom","details","table","border","maxHeight","fontWeight","cursor","DataTable","tableRows","tableData","pages","length","sort","a","b","useState","page","setPage","rowsPerPage","setrowsPerPage","useEffect","TableContainer","Table","stickyHeader","TableHead","TableRow","tableHead","headElement","TableCell","TableBody","slice","data","selectedRow","selectHandler","TablePagination","onChangeRowsPerPage","parseInt","target","value","onChangePage","newPage","count","rowsPerPageOptions","SurfaceTable","surfaceData","selectSurfaceHandler","selectedSurface","ServerTable","server","selectServerRow","updateSelectServerRow","serverData","Array","from","keys","key","get","useClasses","tabs","boxShadow","paddingTop","indicator","tabActive","borderBottom","tab","DataTabs","Tabs","tabId","onChange","handleChange","Tab","AppContext","React","createContext","Map","DataPage","AppData","useContext","filteredSurfaceData","filteredServerData","updateSelectedComponent","updateSelectedSurface","filterValue","updateFilterValue","filter","surface","has","venueName","toLowerCase","includes","set","SelectComponent","error","Grid","container","xs","sm","md","TextField","size","marginBottom","placeholder","InputProps","startAdornment","InputAdornment","Search","state","serverIp","ip4","App","openDrawer","updateDrawerState","changeComponent","componentId","componentObj","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStateManager","updateAppData","setError","timer","setInterval","fetchAppData","fetch","response","json","forEach","surfaceObj","catch","err","clearInterval","Provider","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.9203148a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';import ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    ListItem: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        width:'70%',\r\n        margin: '10px auto',\r\n        borderRadius: '5px',\r\n        backgroundColor: '#2196f3',\r\n        '&:hover': {\r\n            color: 'white',\r\n            backgroundColor: '#1769aa'\r\n        },\r\n        '&$selected': {\r\n            backgroundColor: '#1769aa',\r\n            color: 'white',\r\n            '&:hover': {\r\n                color: 'white',\r\n                backgroundColor: '#1769aa'\r\n            },            \r\n        },\r\n    },\r\n    selected: {},\r\n}));\r\n\r\nconst SideDrawer = (props) => {\r\n    const open = props.open;\r\n    const componentHandler = props.componentHandler;\r\n    const selectedComponent = props.selectedComponent;\r\n\r\n    const menuItems = [{name: 'Empty Page', id: 'emptyPage'}, {name: 'Data', id: 'dataPage'}];\r\n    \r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Drawer \r\n            className={classes.drawer}  \r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n              }}>\r\n            <div className={classes.drawerHeader}> \r\n            <IconButton onClick={props.closeDrawerHandler}>\r\n                <ChevronLeftIcon />\r\n            </IconButton>\r\n            </div>            \r\n            <Divider />\r\n            <List>\r\n          {menuItems.map((item, index) => (\r\n            <ListItem button selected={selectedComponent === item.id} key={item.id} classes={{ root: classes.ListItem, selected: classes.selected }} onClick={(event) => componentHandler(event, item.id)}>\r\n              <ListItemText primary={item.name} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n    </Drawer>\r\n    );\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport clsx from 'clsx';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst drawerWidth =240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n}));\r\n\r\nconst Header = (props) => {\r\n    const shiftHeader = props.shiftHeader;\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <AppBar style={{backgroundColor: '#2196f3'}} \r\n        position=\"fixed\" \r\n        className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: shiftHeader,\r\n          })}>\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={props.openDrawerHandler} className={clsx(classes.menuButton, shiftHeader && classes.hide)}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>);\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n      },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n      },\r\n      contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n      }\r\n}));\r\n\r\nconst MainContent = (props) => {\r\n    const classes = useStyles();\r\n    const open = props.open;\r\n\r\n    return(\r\n        <main\r\n            className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n        })}\r\n        >\r\n            <div className={classes.drawerHeader} />\r\n            {props.children}\r\n        </main>);\r\n}\r\n\r\nexport default  MainContent;","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst EmptyPage = () => {\r\n    return (\r\n        <Paper style={{height: '85vh', padding: '10px'}}>\r\n            <Typography style={{textAlign: 'center'}} variant=\"h5\" gutterBottom>\r\n                This Page is Empty.\r\n            </Typography>\r\n        </Paper>\r\n    );                   \r\n}\r\n\r\nexport default EmptyPage;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#1769aa',\r\n        minHeight: '82vh',\r\n        borderRadius: '5px',\r\n        color: '#fff'\r\n    }\r\n});\r\n\r\nconst DetailsPanel = (props) => {\r\n    const classes = useStyles();\r\n    const labels = [{name:'Venue Name', parameter: 'venueName'}, {name: 'Surface Name', parameter: 'surfaceName'}, {name:'Sport', parameter:'sport'}, {name: 'Status', parameter: 'status'}, {name: 'Server Ip', parameter: 'serverIp'}];\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List>\r\n                <ListItem style={{paddingBottom: '0px'}}>\r\n              <ListItemText>\r\n                <Typography component=\"h6\" gutterBottom>\r\n                    Details\r\n                </Typography>                  \r\n                </ListItemText>\r\n            </ListItem>\r\n            <Divider style={{backgroundColor: '#fff'}}/>\r\n            {labels.map((label, index) => (\r\n            <ListItem key={label.name} >\r\n              <ListItemText>\r\n                <Typography component=\"p\" gutterBottom style={{fontSize: '0.9rem'}}>\r\n                    {label.name}:\r\n                </Typography>\r\n                <Typography variant='body2' style={{fontSize: '0.9rem', marginTop: '0px', maeginBottom: '0px'}}>\r\n                    {props.details[label.parameter]}\r\n                </Typography>                 \r\n              </ListItemText>\r\n            </ListItem>))}\r\n            </List>            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetailsPanel;","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        border: '2px solid #eee',\r\n        maxHeight: '500px', \r\n        '& thead th': {            \r\n            border: '1px solid #eee',\r\n            padding: '15px',\r\n            fontWeight: 'bold',\r\n            color: 'black',\r\n            backgroundColor: '#eee'\r\n        },\r\n        '& tbody td': {\r\n            fontWeight: 300\r\n        },\r\n        '& tbody tr:hover': {\r\n            backgroundColor:'#64b5f6',\r\n            cursor: 'pointer'\r\n        } \r\n    },    \r\n}));\r\n\r\n\r\nconst DataTable = (props) => {\r\n\r\n    const classes = useStyles(0);\r\n\r\n    const tableRows = props.tableData;\r\n    const pages=[10, 50, 100, tableRows.length].sort(function(a, b){return a - b});\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setrowsPerPage] = useState(pages[0]);\r\n\r\n    useEffect(() => {           \r\n        setrowsPerPage(pages[page]);        \r\n    }, [tableRows.length]);\r\n\r\n    const pageChangeHandler = (event, newPage) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const changeRowsPerPageHandler = (event) => {\r\n        setrowsPerPage(parseInt(event.target.value,10));\r\n        setPage(0);\r\n    }\r\n\r\n    const tableRowsPaging = () => {\r\n        return tableRows.slice(page*rowsPerPage, (page+1)*rowsPerPage);\r\n    }\r\n\r\n    return (<>\r\n    <TableContainer style={{maxHeight: '420px', marginTop: '15px', }} >\r\n        <Table stickyHeader aria-label=\"data table\" className={classes.table} classes={{selected: classes.selected}}>\r\n            <TableHead>\r\n                <TableRow>\r\n                    {props.tableHead.map(headElement => (<TableCell key={headElement.id}>{headElement.label}</TableCell>))}\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {tableRowsPaging().map((data, index) => {\r\n                    return(\r\n                        <TableRow selected={props.selectedRow.id === data.id} style={props.selectedRow.id === data.id ? {backgroundColor: '#2196f3'} : null} onClick={(event) => props.selectHandler(event, data)} key={data.id}>                            \r\n                            {props.tableHead.map(headElement => (<TableCell style={props.selectedRow.id === data.id ? {color: '#fff'} : null} key={headElement.id}>{data[headElement.id]}</TableCell>))}\r\n                        </TableRow>\r\n                    )\r\n                })}\r\n            </TableBody>            \r\n        </Table>\r\n    </TableContainer>\r\n    <TablePagination onChangeRowsPerPage={changeRowsPerPageHandler} onChangePage={pageChangeHandler} component='div' page={page} count={tableRows.length} rowsPerPage={rowsPerPage} rowsPerPageOptions={pages}/>    \r\n  </>);\r\n}\r\n\r\nexport default DataTable;","import React from 'react';\r\nimport DataTable from './DataTable';\r\n\r\nconst SurfaceTable = (props) => {\r\n    const tableHead =[{id:'venueName', label:'Venue Name'},\r\n        {id:'surfaceName', label:'Surface Name'},\r\n        {id:'sport', label:'Sport'},\r\n        {id:'status', label:'Status'}];\r\n\r\n    return(\r\n        <>{props.surfaceData.length > 0 ?<DataTable selectHandler={props.selectSurfaceHandler} selectedRow={props.selectedSurface} tableHead={tableHead} tableData={props.surfaceData}/> : null}</>\r\n    );\r\n}\r\n\r\nexport default SurfaceTable;","import React, {useState} from 'react';\r\nimport DataTable from './DataTable';\r\n\r\nconst ServerTable = (props) => {\r\n\r\n    const [selectServerRow, updateSelectServerRow] = useState(props.selectedSurface.server);\r\n\r\n    const serverData = Array.from(props.serverData.keys()).map(key => {\r\n        return props.serverData.get(key);\r\n    });\r\n\r\n    let selectedRow = props.selectedSurface.server;\r\n\r\n    const tableHead =[{id:'ip4', label:'Ip4'},\r\n        {id:'dns', label:'Dns'},\r\n        ];\r\n\r\n    const selectServerHandler = (event, data) => {\r\n        updateSelectServerRow(data);\r\n    }\r\n        \r\n    return(\r\n        <>{serverData.length > 0 ?<DataTable selectHandler={selectServerHandler} selectedRow={selectServerRow} tableHead={tableHead} tableData={serverData}/> : null}</>\r\n    );\r\n}\r\n\r\nexport default ServerTable;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nconst useClasses = makeStyles({\r\n    tabs: {\r\n        backgroundColor: '#fff',\r\n        boxShadow: 'none',\r\n        paddingTop: '0px',\r\n        color: 'black',\r\n        '&$selected': {\r\n            backgroundColor: 'red',\r\n            color: 'white',\r\n        }\r\n    },\r\n    indicator: {\r\n        backgroundColor: '#1769aa'\r\n    },\r\n    tabActive: {\r\n        border: '2px solid #1769aa',\r\n        borderBottom: 'none',\r\n        borderRadius: '2px',\r\n        color:'#1769aa'\r\n    },\r\n    tab: {        \r\n        margin: '0px 0px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff'\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst DataTabs = (props) => {\r\n    const classes = useClasses();\r\n    const tabs = [{tabId: 'surfaces', name: 'Surfaces'}, {tabId: 'servers', name: 'Servers'}]\r\n\r\n    return(\r\n        <AppBar position=\"static\">\r\n            <Tabs classes={{indicator: classes.indicator, root:classes.tabs}} value={props.tabId} onChange={(event, value) => props.handleChange(event, value)} aria-label=\"simple tabs example\">\r\n                {tabs.map(tab => <Tab key={tab.tabId} classes={{root: classes.tab}} id={tab.tabId} value={tab.tabId} className={props.tabId === tab.tabId ? classes.tabActive : null}  label={tab.name} />)}\r\n            </Tabs>\r\n        </AppBar> \r\n    );\r\n}\r\n\r\nexport default DataTabs;","import React from 'react';\r\n\r\nconst AppContext = React.createContext({\r\n    surfaceData: [],\r\n    serverData: new Map()\r\n});\r\n\r\nexport default AppContext;","import React, {useEffect, useState, useContext} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DetailsPanel from '../Components/DetailsPanel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SurfaceTable from '../Components/SurfaceTable';\r\nimport ServerTable from '../Components/ServerTable';\r\nimport DataTabs from '../Components/DataTabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Search} from '@material-ui/icons';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AppContext from '../AppContext/AppContext';\r\n\r\n\r\nconst DataPage = () => {\r\n\r\n    const AppData = useContext(AppContext);\r\n\r\n    let filteredSurfaceData = [];\r\n    let filteredServerData = new Map();\r\n    \r\n    const [selectedComponent, updateSelectedComponent] = useState({\r\n        id: 'surfaces'\r\n    });\r\n\r\n    const [selectedSurface, updateSelectedSurface] = useState({});\r\n\r\n    const [filterValue, updateFilterValue] = useState(null);    \r\n\r\n    useEffect(() => {\r\n        if(AppData.surfaceData.length > 0 && !selectedSurface['id']) {\r\n            updateSelectedSurface(AppData.surfaceData[0]);\r\n        }              \r\n    },[AppData.surfaceData]);\r\n   \r\n    const handleChange = (event, id) => {\r\n        if (id === 'surfaces') {\r\n            updateSelectedComponent(state => {\r\n                return {\r\n                    id: 'surfaces'\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            updateSelectedComponent(state => {\r\n                return {\r\n                    id: 'servers'\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const selectSurfaceHandler = (event, selectedSurface) => {\r\n        updateSelectedSurface(selectedSurface);\r\n    }\r\n\r\n    const searchHandler = (event) => {\r\n        updateFilterValue(event.target.value);\r\n    }\r\n\r\n    if (filterValue === null) {\r\n        filteredSurfaceData = AppData.surfaceData;\r\n        filteredServerData = AppData.serverData;\r\n    }\r\n    else {\r\n        filteredSurfaceData = AppData.surfaceData.filter((surface) => {\r\n            if (!filteredServerData.has(surface.server.id) && surface.venueName.toLowerCase().includes(filterValue.toLowerCase())) {\r\n                filteredServerData.set(surface.server.id, surface.server);\r\n            }       \r\n\r\n            return surface.venueName.toLowerCase().includes(filterValue.toLowerCase())});\r\n    }\r\n    \r\n    let SelectComponent = selectedComponent.id === 'surfaces' ? <SurfaceTable surfaceData={filteredSurfaceData} selectSurfaceHandler={selectSurfaceHandler} selectedSurface={selectedSurface} /> : <ServerTable serverData={filteredServerData} selectedSurface={selectedSurface} />\r\n    \r\n    return (<>{ !AppData.error ?\r\n        <Paper style={{minHeight: '85vh', padding: '10px'}}>\r\n             <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12} md={9}>\r\n                    <Toolbar style={{padding: '0px'}}>\r\n                        <TextField onChange={searchHandler} size='small' style={{width: '100%', marginBottom: '15px'}} placeholder='Search Venue Name' InputProps={{startAdornment: <InputAdornment position=\"start\"><Search /></InputAdornment>}} id=\"search-surface\" variant='outlined' />                            \r\n                    </Toolbar>\r\n                    <DataTabs tabId={selectedComponent.id} handleChange={handleChange}/>\r\n                    {SelectComponent}\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={3}>\r\n                    <DetailsPanel details = {selectedSurface.id ? {...selectedSurface, serverIp: selectedSurface.server.ip4} : selectedSurface}/>\r\n                </Grid>\r\n             </Grid>\r\n        </Paper> : <p style={{color: 'red',}}>Something went wrong</p>\r\n    }</>\r\n    );                   \r\n}\r\n\r\nexport default DataPage;","import React, {useState} from 'react';\nimport SideDrawer from './Components/SideDrawer';\nimport Header from './Components/Header';\nimport MainContent from './Components/MainContent';\nimport EmptyPage from './Containers/EmptyPage';\nimport DataPage from './Containers/DataPage';\nimport './App.css';\n\nfunction App() {\n  \n  const [openDrawer, updateDrawerState] = useState(true);\n  const [component, changeComponent] = useState({\n    component: EmptyPage,\n    id: 'emptyPage'\n  });\n\n  const componentHandler = (event, componentId) => {\n    const componentObj = {};\n\n    if(componentId === 'emptyPage') {      \n      componentObj.component = EmptyPage;\n      componentObj.id = 'emptyPage' \n    }\n    else {\n      componentObj.component = DataPage;\n      componentObj.id = 'dataPage'\n    }\n\n    changeComponent({...componentObj});\n  }\n\n  const openDrawerHandler = () => {\n    updateDrawerState(true);\n  }\n\n  const closeDrawerHandler = () => {\n    updateDrawerState(false);\n  }\n\n  return (\n    <div style={{display: 'flex'}}>\n      <Header shiftHeader = {openDrawer} openDrawerHandler = {openDrawerHandler} />\n      <SideDrawer open={openDrawer} closeDrawerHandler={closeDrawerHandler} componentHandler={componentHandler} selectedComponent={component.id} />\n      <MainContent open={openDrawer} >      \n        <component.component />\n      </MainContent>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState, useEffect} from 'react';\r\nimport AppContext from '../AppContext/AppContext';\r\n\r\nconst GlobalStateManager = (props) => {\r\n    \r\n    const [AppData, updateAppData] = useState({\r\n        surfaceData: [],\r\n        serverData: new Map()\r\n    });\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let timer = setInterval(function fetchAppData(){\r\n        fetch('https://2hsjstzo71.execute-api.us-east-1.amazonaws.com/prod/livebarn-interview-project')\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            const surfaceData = data;\r\n            let serverData = new Map();\r\n            surfaceData.forEach((surfaceObj) => {\r\n                 if(!serverData.has(surfaceObj.server.id)) {\r\n                     serverData.set(surfaceObj.server.id, surfaceObj.server)\r\n                 }\r\n            })\r\n            updateAppData(state => {\r\n                return ({\r\n                    ...state,\r\n                    surfaceData: [...surfaceData],\r\n                    serverData: serverData\r\n                })\r\n            });     \r\n            setError(false);       \r\n        }).catch(err => setError(true));\r\n        return fetchAppData;\r\n        }(), 60000);    \r\n        \r\n        return () => {clearInterval(timer);}\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <AppContext.Provider value={{surfaceData: AppData.surfaceData, serverData: AppData.serverData, error: error}}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default GlobalStateManager;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './index.css';\nimport 'fontsource-roboto';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalStateManager from './Containers/GlobalStateManager';\n\nReactDOM.render(\n  <React.StrictMode>   \n    <CssBaseline />\n    <GlobalStateManager>\n      <App />  \n    </GlobalStateManager>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}